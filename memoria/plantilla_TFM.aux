\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\babel@aux[2]{}
\@nameuse{bbl@beforestart}
\catcode `"\active 
\catcode `<\active 
\catcode `>\active 
\@nameuse{es@quoting}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{*}
\bibstyle{apacite}
\babel@aux{spanish}{}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\citation{ScratchPixel}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}State of the Art}{3}{chapter.2}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Rendering Techniques}{3}{section.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Rasterization}{3}{subsection.2.1.1}\protected@file@percent }
\citation{WikimediaRT}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces }}{4}{figure.2.1}\protected@file@percent }
\newlabel{rasterization-triangle-image}{{2.1}{4}{}{figure.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Ray Tracing}{4}{subsection.2.1.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces Overview of the ray tracing algorithm with spheres as our only geometry and a single light source.}}{5}{figure.2.2}\protected@file@percent }
\newlabel{rt-overview-image}{{2.2}{5}{Overview of the ray tracing algorithm with spheres as our only geometry and a single light source}{figure.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2.1}Mathematical foundation}{5}{subsubsection.2.1.2.1}\protected@file@percent }
\citation{WikipediaRT}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces Ray tracing schema with all the input components.}}{6}{figure.2.3}\protected@file@percent }
\newlabel{RaysViewportSchema}{{2.3}{6}{Ray tracing schema with all the input components}{figure.2.3}{}}
\newlabel{eq-t-b}{{2.1}{7}{Mathematical foundation}{equation.2.1.1}{}}
\newlabel{eq-tn-bn}{{2.2}{7}{Mathematical foundation}{equation.2.1.2}{}}
\newlabel{eq-vn}{{2.3}{7}{Mathematical foundation}{equation.2.1.3}{}}
\newlabel{eq-g}{{2.4}{7}{Mathematical foundation}{equation.2.1.4}{}}
\newlabel{eq-q}{{2.5}{7}{Mathematical foundation}{equation.2.1.5}{}}
\newlabel{eq-p}{{2.6}{7}{Mathematical foundation}{equation.2.1.6}{}}
\newlabel{eq-r}{{2.7}{7}{Mathematical foundation}{equation.2.1.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Ray Tracing Technologies}{7}{section.2.2}\protected@file@percent }
\citation{Mantle}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Vulkan}{8}{subsection.2.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}OptiX}{9}{subsection.2.2.2}\protected@file@percent }
\citation{Clarberg2022}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Analysis}{11}{chapter.3}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Problem and objectives}{11}{section.3.1}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Experiment Design}{11}{section.3.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Render times over 1000 frames with a frame buffer resolution of 7680x4320, while drawing the model of a viking room with textures. It can be observed how in a very short span of time, the rendering time of the exact same geometry and effects can hugely change.}}{12}{figure.3.1}\protected@file@percent }
\newlabel{vulkan-7680x4320viking_room-textures-frametimes}{{3.1}{12}{Render times over 1000 frames with a frame buffer resolution of 7680x4320, while drawing the model of a viking room with textures. It can be observed how in a very short span of time, the rendering time of the exact same geometry and effects can hugely change}{figure.3.1}{}}
\citation{VulkanTutorial}
\citation{McGuire2022Data}
\newlabel{scenes-geometry-table}{{3.2}{13}{Experiment Design}{figure.3.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces BMW 3D model used during our experiments}}{13}{figure.3.2}\protected@file@percent }
\newlabel{bmw-screenshot}{{3.2}{13}{BMW 3D model used during our experiments}{figure.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Sponza 3D model used during our experiments}}{14}{figure.3.3}\protected@file@percent }
\newlabel{sponza-screenshot}{{3.3}{14}{Sponza 3D model used during our experiments}{figure.3.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Hairball3D model used during our experiments}}{14}{figure.3.4}\protected@file@percent }
\newlabel{hairball-screenshot}{{3.4}{14}{Hairball3D model used during our experiments}{figure.3.4}{}}
\newlabel{extra-scenes-geometry-table}{{3.2}{14}{Experiment Design}{figure.3.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces Triangle count of each scene used to test both renderers. We can see how there are orders of magnitude of difference every two of them.}}{15}{figure.3.5}\protected@file@percent }
\newlabel{scenes-geometry-graph}{{3.5}{15}{Triangle count of each scene used to test both renderers. We can see how there are orders of magnitude of difference every two of them}{figure.3.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces Triangle count of the extra scenes used to further test acceleration structure build times.}}{15}{figure.3.6}\protected@file@percent }
\newlabel{extra-scenes-geometry-graph}{{3.6}{15}{Triangle count of the extra scenes used to further test acceleration structure build times}{figure.3.6}{}}
\newlabel{pc-specs-table}{{3.2}{16}{Experiment Design}{figure.3.6}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Design}{17}{chapter.4}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Vulkan Ray Tracer}{17}{section.4.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}Rasterized}{17}{subsection.4.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.2}Ray Traced}{17}{subsection.4.1.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces UML class diagram for the rasterized Vulkan renderer.}}{18}{figure.4.1}\protected@file@percent }
\newlabel{rasterized-uml}{{4.1}{18}{UML class diagram for the rasterized Vulkan renderer}{figure.4.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces UML class diagram for the raytraced Vulkan renderer.}}{19}{figure.4.2}\protected@file@percent }
\newlabel{vulkan-rt-uml}{{4.2}{19}{UML class diagram for the raytraced Vulkan renderer}{figure.4.2}{}}
\citation{OptixCourse}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}OptiX Ray Tracer}{20}{section.4.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces UML class diagram for the OptiX ray tracer.}}{21}{figure.4.3}\protected@file@percent }
\newlabel{optix-uml}{{4.3}{21}{UML class diagram for the OptiX ray tracer}{figure.4.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Flow charts}{22}{section.4.3}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4.4}{\ignorespaces UML flow chart.}}{23}{figure.4.4}\protected@file@percent }
\newlabel{init-flowchart}{{4.4}{23}{UML flow chart}{figure.4.4}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Development}{25}{chapter.5}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Implementation}{26}{section.5.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.1}OptiX Renderer}{26}{subsection.5.1.1}\protected@file@percent }
\citation{VulkanTutorial}
\citation{DXGI}
\citation{GpuMemUsageVulkan}
\citation{VulkanRaytracingTutorial}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.2}Vulkan Renderer}{27}{subsection.5.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2.1}Rasterized}{27}{subsubsection.5.1.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2.2}Ray Traced}{27}{subsubsection.5.1.2.2}\protected@file@percent }
\citation{Nvpro}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.3}Automation and Plotting}{30}{subsection.5.1.3}\protected@file@percent }
\citation{VulkanTutorial}
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Results}{31}{chapter.6}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}Rasterization Baseline}{31}{section.6.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces GPU memory consumption when rendering the Viking Room 3D model at a range of reasonable resolutions, using ray traced and traditionally rasterized graphics. We can see a significant difference between the two, as well as an expected increase as resolutions get higher.}}{32}{figure.6.1}\protected@file@percent }
\newlabel{memory-usage-comparison-graph}{{6.1}{32}{GPU memory consumption when rendering the Viking Room 3D model at a range of reasonable resolutions, using ray traced and traditionally rasterized graphics. We can see a significant difference between the two, as well as an expected increase as resolutions get higher}{figure.6.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.2}{\ignorespaces Single frame rendering time when drawing the Viking Room 3D model at a range of reasonable resolution, using ray traced and traditionally rasterized graphics. As with the memory consumption graph, we see how the two of them take longer to finish in higher resolutions, while the rasterized renderer greatly outperforms the ray traced one.}}{33}{figure.6.2}\protected@file@percent }
\newlabel{frametimes-comparison-graph}{{6.2}{33}{Single frame rendering time when drawing the Viking Room 3D model at a range of reasonable resolution, using ray traced and traditionally rasterized graphics. As with the memory consumption graph, we see how the two of them take longer to finish in higher resolutions, while the rasterized renderer greatly outperforms the ray traced one}{figure.6.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.3}{\ignorespaces Memory consumption of OptiX and Vulkan (raytraced) when rendering the 3D models BMW, Sponza and Hairball.}}{34}{figure.6.3}\protected@file@percent }
\newlabel{memory-usage-raytraced-comparison-graph}{{6.3}{34}{Memory consumption of OptiX and Vulkan (raytraced) when rendering the 3D models BMW, Sponza and Hairball}{figure.6.3}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {BMW}}}{34}{subfigure.3.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {Sponza}}}{34}{subfigure.3.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {Hairball}}}{34}{subfigure.3.3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6.2}Memory Usage}{34}{section.6.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.4}{\ignorespaces Acceleration Structure Build Time of OptiX and Vulkan (raytraced) when rendering the 3D models BMW, Sponza and Hairball. Sorted by rendering resolution.}}{35}{figure.6.4}\protected@file@percent }
\newlabel{as-build-time-comparison-graph}{{6.4}{35}{Acceleration Structure Build Time of OptiX and Vulkan (raytraced) when rendering the 3D models BMW, Sponza and Hairball. Sorted by rendering resolution}{figure.6.4}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {BMW}}}{35}{subfigure.4.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {Sponza}}}{35}{subfigure.4.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {Hairball}}}{35}{subfigure.4.3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6.3}Acceleration Structure Build Time}{35}{section.6.3}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.5}{\ignorespaces Acceleration Structure Build Time of OptiX and Vulkan (raytraced) when rendering the 3D models BMW, Sponza and Hairball. Sorted by model.}}{36}{figure.6.5}\protected@file@percent }
\newlabel{as-build-time-geometry-comparison-graph}{{6.5}{36}{Acceleration Structure Build Time of OptiX and Vulkan (raytraced) when rendering the 3D models BMW, Sponza and Hairball. Sorted by model}{figure.6.5}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {1280x720}}}{36}{subfigure.5.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {1920x1080}}}{36}{subfigure.5.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {2560x1440}}}{36}{subfigure.5.3}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(d)}{\ignorespaces {3840x2160}}}{36}{subfigure.5.4}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.6}{\ignorespaces Acceleration Structure Build Times for each model, divided between the TLAS and BLAS phases. We see great discrepancies in the distribution of time in each case.}}{37}{figure.6.6}\protected@file@percent }
\newlabel{as-build-time-decomposed}{{6.6}{37}{Acceleration Structure Build Times for each model, divided between the TLAS and BLAS phases. We see great discrepancies in the distribution of time in each case}{figure.6.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.7}{\ignorespaces Acceleration Structure Build Times divided between the TLAS and BLAS phases for the extra set of models (Human, ISCV2 and Gallery). We see how the presence of textures makes for a longer TLAS build time.}}{38}{figure.6.7}\protected@file@percent }
\newlabel{as-extra-build-time-decomposed}{{6.7}{38}{Acceleration Structure Build Times divided between the TLAS and BLAS phases for the extra set of models (Human, ISCV2 and Gallery). We see how the presence of textures makes for a longer TLAS build time}{figure.6.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.4}Frame Time}{39}{section.6.4}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.8}{\ignorespaces Time taken for rendering 1000 frames when drawing the BMW 3D model at 1280x720, using ray tracing. We see how the first frame takes much longer than the rest of them to draw.}}{39}{figure.6.8}\protected@file@percent }
\newlabel{frametimes-outlier-graph}{{6.8}{39}{Time taken for rendering 1000 frames when drawing the BMW 3D model at 1280x720, using ray tracing. We see how the first frame takes much longer than the rest of them to draw}{figure.6.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.9}{\ignorespaces Time taken for rendering 1000 frames when drawing the BMW 3D model at 1280x720, using ray tracing. We have removed the first frame time since it took too long to draw in comparison with the rest.}}{40}{figure.6.9}\protected@file@percent }
\newlabel{frametimes-no-outlier-graph}{{6.9}{40}{Time taken for rendering 1000 frames when drawing the BMW 3D model at 1280x720, using ray tracing. We have removed the first frame time since it took too long to draw in comparison with the rest}{figure.6.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.10}{\ignorespaces Frame rendering times for each 3D model (BMW, Hairball and Sponza) across both libraries and 4 reasonable resolutions, from 720p to 4k.}}{41}{figure.6.10}\protected@file@percent }
\newlabel{frametimes-overview-graph}{{6.10}{41}{Frame rendering times for each 3D model (BMW, Hairball and Sponza) across both libraries and 4 reasonable resolutions, from 720p to 4k}{figure.6.10}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {BMW}}}{41}{subfigure.10.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {Sponza}}}{41}{subfigure.10.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {Hairball}}}{41}{subfigure.10.3}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.11}{\ignorespaces Acceleration Structure Build Time and Frame Render Time comparison in OptiX when using an Nvidia 2070 Super in two systems with different CPUs. We see how a faster CPU means better performance in both cases.}}{42}{figure.6.11}\protected@file@percent }
\newlabel{optix-2070-super-comparison}{{6.11}{42}{Acceleration Structure Build Time and Frame Render Time comparison in OptiX when using an Nvidia 2070 Super in two systems with different CPUs. We see how a faster CPU means better performance in both cases}{figure.6.11}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {Acceleration Structure Build Time}}}{42}{subfigure.11.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {Frame Times}}}{42}{subfigure.11.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6.5}Hardware comparison}{42}{section.6.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5.1}Same GPU, changing CPU}{42}{subsection.6.5.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.12}{\ignorespaces Acceleration Structure Build Time and Frame Render Time comparison in Vulkan when using an Nvidia 2070 Super in two systems with different CPUs. We see more variation in which system does better, in contrast with the previous OptiX test.}}{43}{figure.6.12}\protected@file@percent }
\newlabel{vulkan-2070-super-comparison}{{6.12}{43}{Acceleration Structure Build Time and Frame Render Time comparison in Vulkan when using an Nvidia 2070 Super in two systems with different CPUs. We see more variation in which system does better, in contrast with the previous OptiX test}{figure.6.12}{}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {Acceleration Structure Build Time}}}{43}{subfigure.12.1}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {Frame Times}}}{43}{subfigure.12.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5.2}Virtualization effects}{44}{subsection.6.5.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6.13}{\ignorespaces Acceleration Structure Build Times for Vulkan in a Virtual Machine and running bare metal. We see how the bare metal solution manages to get a significantly lower time than the virtualized one.}}{45}{figure.6.13}\protected@file@percent }
\newlabel{vulkan-accelbuildtime-bm-vm-comparison}{{6.13}{45}{Acceleration Structure Build Times for Vulkan in a Virtual Machine and running bare metal. We see how the bare metal solution manages to get a significantly lower time than the virtualized one}{figure.6.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.14}{\ignorespaces Frame render times in Vulkan across two machines with the same GPU (Nvidia 3080). One of them is running the renderer under a virtual machine and the other is doing so bare metal. We see a slight advantage towards the virtualized approach in this side, which could be due to a mere coincidence. This would make the GPU the only important element when drawing a given scene.}}{46}{figure.6.14}\protected@file@percent }
\newlabel{vulkan-frame-times-bm-vm-comparison}{{6.14}{46}{Frame render times in Vulkan across two machines with the same GPU (Nvidia 3080). One of them is running the renderer under a virtual machine and the other is doing so bare metal. We see a slight advantage towards the virtualized approach in this side, which could be due to a mere coincidence. This would make the GPU the only important element when drawing a given scene}{figure.6.14}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {7}Conclussions}{47}{chapter.7}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\citation{Kallweit22}
\@writefile{toc}{\contentsline {section}{\numberline {7.1}Future work}{48}{section.7.1}\protected@file@percent }
\bibdata{bibliografia}
\bibcite{ScratchPixel}{\citeauthoryear {{\em  3D Basic Rendering\/}}{{\em  3D Basic Rendering\/}}{{\APACyear {2022}}}}
\APACbibcite{ScratchPixel}{\citeauthoryear {{\em  3D Basic Rendering\/}}{{\em  3D Basic Rendering\/}}{{\APACyear {2022}}}}
\bibcite{Clarberg2022}{\citeauthoryear {Clarberg\ \BOthers {.}}{Clarberg\ \BOthers {.}}{{\APACyear {2022}}}}
\APACbibcite{Clarberg2022}{\citeauthoryear {Clarberg\ \BOthers {.}}{Clarberg\ \BOthers {.}}{{\APACyear {2022}}}}
\bibcite{WikimediaRT}{\citeauthoryear {{\em  File:Ray trace diagram.svg\/}}{{\em  File:Ray trace diagram.svg\/}}{{\APACyear {2022}}}}
\APACbibcite{WikimediaRT}{\citeauthoryear {{\em  File:Ray trace diagram.svg\/}}{{\em  File:Ray trace diagram.svg\/}}{{\APACyear {2022}}}}
\bibcite{Kallweit22}{\citeauthoryear {Kallweit\ \BOthers {.}}{Kallweit\ \BOthers {.}}{{\APACyear {2022}}}}
\APACbibcite{Kallweit22}{\citeauthoryear {Kallweit\ \BOthers {.}}{Kallweit\ \BOthers {.}}{{\APACyear {2022}}}}
\bibcite{VulkanRaytracingTutorial}{\citeauthoryear {Lefrançois}{Lefrançois}{{\APACyear {{\bibnodate {}}}}}}
\APACbibcite{VulkanRaytracingTutorial}{\citeauthoryear {Lefrançois}{Lefrançois}{{\APACyear {{\bibnodate {}}}}}}
\bibcite{Mantle}{\citeauthoryear {{\em  Mantle, Wikipedia\/}}{{\em  Mantle, Wikipedia\/}}{{\APACyear {2022}}}}
\APACbibcite{Mantle}{\citeauthoryear {{\em  Mantle, Wikipedia\/}}{{\em  Mantle, Wikipedia\/}}{{\APACyear {2022}}}}
\bibcite{McGuire2022Data}{\citeauthoryear {McGuire}{McGuire}{{\APACyear {2022}}}}
\APACbibcite{McGuire2022Data}{\citeauthoryear {McGuire}{McGuire}{{\APACyear {2022}}}}
\bibcite{Nvpro}{\citeauthoryear {Nviidia}{Nviidia}{{\APACyear {2022}}}}
\APACbibcite{Nvpro}{\citeauthoryear {Nviidia}{Nviidia}{{\APACyear {2022}}}}
\bibcite{VulkanTutorial}{\citeauthoryear {Overvoorde}{Overvoorde}{{\APACyear {{\bibnodate {}}}}}}
\APACbibcite{VulkanTutorial}{\citeauthoryear {Overvoorde}{Overvoorde}{{\APACyear {{\bibnodate {}}}}}}
\bibcite{WikipediaRT}{\citeauthoryear {{\em  Ray Tracing (graphics)\/}}{{\em  Ray Tracing (graphics)\/}}{{\APACyear {2022}}}}
\APACbibcite{WikipediaRT}{\citeauthoryear {{\em  Ray Tracing (graphics)\/}}{{\em  Ray Tracing (graphics)\/}}{{\APACyear {2022}}}}
\bibcite{GpuMemUsageVulkan}{\citeauthoryear {Sawichi}{Sawichi}{{\APACyear {{\bibnodate {}}}}}}
\APACbibcite{GpuMemUsageVulkan}{\citeauthoryear {Sawichi}{Sawichi}{{\APACyear {{\bibnodate {}}}}}}
\bibcite{OptixCourse}{\citeauthoryear {Wald}{Wald}{{\APACyear {2022}}}}
\APACbibcite{OptixCourse}{\citeauthoryear {Wald}{Wald}{{\APACyear {2022}}}}
\bibcite{DXGI}{\citeauthoryear {White\ \BOthers {.}}{White\ \BOthers {.}}{{\APACyear {{\bibnodate {}}}}}}
\APACbibcite{DXGI}{\citeauthoryear {White\ \BOthers {.}}{White\ \BOthers {.}}{{\APACyear {{\bibnodate {}}}}}}
\@writefile{toc}{\contentsline {section}{Referencias}{49}{section*.5}\protected@file@percent }
\gdef \@abspage@last{59}
